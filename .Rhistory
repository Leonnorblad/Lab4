ggplot(iris, aes(y=Sepal.Length, x=Petal.Length)) +
geom_point(size=1) +
labs(title="Scatterplot of Sepal Length and Petal Length",
y="Sepal Length",
x="Penatal Length")# +
ggplot(iris, aes(y=Sepal.Length, x=Petal.Length)) +
geom_point(size=1) +
labs(title="Scatterplot of Sepal Length and Petal Length",
y="Sepal Length",
x="Penatal Length") +
LiU_theme()
library(Lab4Pack)
?LiU_theme
library(Lab4Pack)
?LiU_theme
LiU_theme <- function(){
theme(# Title
plot.title = element_text(hjust=0.5,        # Center the title
face="bold",      # Bold text
size=14,          # Change the size
family="Tahoma",  # Change the font style
color="#3DD2DC"), # LiU blue colour
# Axis title
axis.title = element_text(face="bold",      # Bold text
size=12,          # Change the size
family="Tahoma",  # Change the font style
color="#3DD2DC"), # LiU blue colour
# Axis text
axis.text = element_text(size=10,               # Change the size
family="Tahoma"),      # Change the font style
panel.border = element_rect(fill = NA,          # No border colour
colour = "grey20"), # Gray colour for the border
panel.grid = element_line(colour = "grey85"),   # Gray color for the grid
panel.background = element_rect(fill = "white", # White background
colour = NA)    # No colour
)
}
LiU_theme <- function(){
theme(# Title
plot.title = element_text(hjust=0.5,        # Center the title
face="bold",      # Bold text
size=14,          # Change the size
family="Tahoma",  # Change the font style
color="#3DD2DC"), # LiU blue colour
# Axis title
axis.title = element_text(face="bold",      # Bold text
size=12,          # Change the size
family="Tahoma",  # Change the font style
color="#3DD2DC"), # LiU blue colour
# Axis text
axis.text = element_text(size=10,               # Change the size
family="Tahoma"),      # Change the font style
panel.border = element_rect(fill = NA,          # No border colour
colour = "grey20"), # Gray colour for the border
panel.grid = element_line(colour = "grey85"),   # Gray color for the grid
panel.background = element_rect(fill = "white", # White background
colour = NA)    # No colour
)
}
data(iris)
ggplot(iris, aes(y=Sepal.Length, x=Petal.Length)) +
geom_point(size=1) +
labs(title="Scatterplot of Sepal Length and Petal Length",
y="Sepal Length",
x="Penatal Length") +
LiU_theme()
?linreg
?linreg
library(Lab4Pack)
library(Lab4Pack)
?linreg
?linreg
?linreg
library(Lab4Pack)
library(Lab4Pack)
?linreg
library(Lab4Pack)
?linreg
linreg(data=iris, formula=Petal.Length~Species)
linreg(data=iris, formula=Petal.Length~Species)$linreg_func()
!is.data.frame(data)
is.formula(formula)
linreg <- setRefClass("linreg",
fields = list(result ="list",
data = "data.frame",
df_name ="character",
formula = "formula",
beta_hat = "matrix",
y_hat ="matrix",
e_hat = "matrix",
df = "numeric",
sigma_2_hat = "matrix",
var_beta_hat = "matrix",
t_beta = "matrix",
p_value = "matrix",
X = "matrix"),
methods = list(
linreg_func = function(){
# if(!is.data.frame(data)|!is.formula(formula)){stop()}
df_name <<- as.character(substitute(data))
X <<- model.matrix(formula, data)                # Independen variable(s)
variable_name_y <- all.vars(formula)[1]         # Name of dependet variable
y <- data[,variable_name_y]                     # Dependent variable
# Beta (Regression coefficients)
result$beta_hat <<- solve(t(X)%*%X)%*%t(X)%*%y
# Fitted values
result$y_hat <<- X%*%result$beta_hat
# Residuals
result$e_hat <<- y-result$y_hat
# Degrees of freedom
n <- nrow(X)       # Number of obs
p <- ncol(X)       # Number of variables
result$df <<- n-p  # Degrees of freedom
# The residual variance
result$sigma_2_hat <<- t(result$e_hat)%*%result$e_hat/result$df
# The variance of the regression coefficients
result$var_beta_hat <<- result$sigma_2_hat[1]*solve(t(X)%*%X)
# The t-values for each coefficient
result$t_beta <<- result$beta_hat/sqrt(diag(result$var_beta_hat))
# p-values
result$p_value <<- 2*(1-pt(result$t_beta, result$df))
},
print = function(){
cat("Call:\nlm(formula = ", format(formula), ", data = ", df_name,")\n\n", sep="")
temp <- as.vector(result$beta_hat)
names(temp) <- colnames(X)
cat("Coefficients:\n")
temp
},
plot = function(){
# Data preperation for the first plot:
# A data.frame with x (fitted) and y (residuals) variables
plot_data1 <- data.frame(e_hat=result$e_hat,
y_hat=result$y_hat)
# Calculate the median residual for each fitted value
plot_median_data <- aggregate(plot_data$e_hat, list(plot_data$y_hat), FUN=median)
colnames(plot_median_data) <- c("y_hat", "median")
# Creating a data.frame with: Residuals, fitted values and the median for each fitted value
plot_data <- merge(plot_data1, plot_median_data, by="y_hat")
# Finding outliers
qunts <- quantile(plot_data$e_hat, probs = c(0.02, 0.98))
# Criteras
smaller <- qunts[[1]]
larger <- qunts[[2]]
out <- which(plot_data$e_hat > larger | plot_data$e_hat < smaller)
# If not outlier -> NA
plot_data$outlier <-NA
# Saves the obs numbers of the outliers
plot_data$outlier[out] <- out
# Plot 1 - Residuals Vs fitted
p1 <- ggplot(data=plot_data, aes(y=e_hat, x=y_hat)) +
geom_point(shape=1, size=3) +
geom_hline(aes(yintercept=0), linetype='dotted', color="gray") +
geom_line(color='red', data = plot_data, aes(x=y_hat, y=median)) +
geom_text(aes(label = outlier), na.rm = TRUE, hjust=-0.3) +
labs(y="Residuals",
x = paste("Fitted values\nlm(",format(formula),")", sep=""),
title="Residuals Vs Fitted") +
theme_bw() +
theme(plot.title = element_text(hjust=0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
# Data preperation for the second plot:
# Uses the data.frame with x (fitted) and y (residuals) variables
plot_data2 <- plot_data1
# Transforming the residuals
plot_data2$e_hat <- sqrt(abs(scale(plot_data1$e_hat)))
# Calculate the median residual for each fitted value
plot_median_data2 <- aggregate(plot_data2$e_hat, list(plot_data$y_hat), FUN=median)
colnames(plot_median_data2) <- c("y_hat", "median")
# Creating a data.frame with: Residuals, fitted values and the median for each fitted value
plot_data_stan <- merge(plot_data2, plot_median_data2, by="y_hat")
# Finding outliers
qunts <- quantile(plot_data_stan$e_hat, probs = c(0.02, 0.98))
# Criteras
smaller <- qunts[[1]]
larger <- qunts[[2]]
out <- which(plot_data_stan$e_hat > larger | plot_data_stan$e_hat < smaller)
# If not outlier -> NA
plot_data_stan$outlier <-NA
# Saves the obs numbers of the outliers
plot_data_stan$outlier[out] <- out
# Plot 2 - Scale-Location
p2 <- ggplot(data=plot_data_stan, aes(y=e_hat, x=y_hat)) +
geom_point(shape=1, size=3) +
geom_hline(aes(yintercept=0), linetype='dotted', color="gray") +
geom_line(color='red', data = plot_data_stan, aes(x=y_hat, y=median)) +
geom_text(aes(label = outlier), na.rm = TRUE, hjust=-0.3) +
labs(y=bquote(sqrt("|Standardized Residuals|")),
x = paste("Fitted values\nlm(",format(formula),")", sep=""),
title="Scale-Location") +
theme_bw() +
theme(plot.title = element_text(hjust=0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
return(list(p1,p2))
},
pred = function(){
return(result$y_hat)
},
coef = function(){
return(result$beta_hat)
},
resid = function(){
return(result$e_hat)
},
summary = function(){
data_frame <- data.frame(Estimate = as.vector(result$beta_hat),
"Std. Error" = as.vector(diag(sqrt(abs(result$var_beta_hat)))),
t_value = result$t_beta,
p_value = result$p_value)
rownames(data_frame)<-rownames(result$beta_hat)
colnames(data_frame)<-c("Estimate", "Std. Error", "t value", "p value")
vec<-as.vector(sqrt(result$sigma_2_hat)[1])
cat("Coefficients:\n")
print.data.frame(data_frame)
cat("\nResidual standard error:", vec, "on", result$df,  "degrees of freedom.")
}
)
)
library(Lab4Pack)
linreg(data=iris, formula=Petal.Length~Species)$linreg_func()
linreg(data=iris, formula=Petal.Length~Species)$linreg_func()$summary()
s<-linreg(data=iris, formula=Petal.Length~Species)
s$linreg_func()
s$summary()
library(Lab4Pack)
?linreg
library(Lab4Pack)
?linreg
library(Lab4Pack)
?linreg
library(Lab4Pack)
?linreg
library(Lab4Pack)
?linreg
library(Lab4Pack)
library(Lab4Pack)
?linreg
library(Lab4Pack)
?linreg
library(Lab4Pack)
?linreg
?linreg
library(Lab4Pack)
?linreg
library(Lab4Pack)
?linreg
?Lab4Pack
?Lab4Pack
?Lab4Pack
library(Lab4Pack)
library(Lab4Pack)
?Lab4Pack
usethis::use_vignette('vignette-name')
?linreg
usethis::use_vignette('Linreg vignette')
usethis::use_vignette('Linreg-vignette')
library(Lab4Pack)
library(Lab4Pack)
library(Lab4Pack)
rmarkdown::render('C:/Users/Leonn/Documents/Lab4/vignettes/Linreg-vignette.Rmd')
rmarkdown::render('C:/Users/Leonn/Documents/Lab4/vignettes/Linreg-vignette.Rmd')
rmarkdown::render('C:/Users/Leonn/Documents/Lab4/vignettes/Linreg-vignette.Rmd')
rmarkdown::render('C:/Users/Leonn/Documents/Lab4/vignettes/Linreg-vignette.Rmd')
iris
rmarkdown::render('C:/Users/Leonn/Documents/Lab4/vignettes/Linreg-vignette.Rmd')
rmarkdown::render('C:/Users/Leonn/Documents/Lab4/vignettes/Linreg-vignette.Rmd')
rmarkdown::render('C:/Users/Leonn/Documents/Lab4/vignettes/Linreg-vignette.Rmd')
library(Lab4Pack)
rmarkdown::render('C:/Users/Leonn/Documents/Lab4/vignettes/Linreg-vignette.Rmd')
library(Lab4Pack)
rmarkdown::render('C:/Users/Leonn/Documents/Lab4/vignettes/Linreg-vignette.Rmd')
library(Lab4Pack)
?linreg
example <- linreg(data=iris, formula=Petal.Length~Species)
example$linreg_func()
example$summary()
example$print()
example <- linreg(data=iris, formula=Petal.Length~Species)
example$linreg_func()
library(Lab4Pack)
example <- linreg(data=iris, formula=Petal.Length~Species)
example$linreg_func()
library(Lab4Pack)
example <- linreg(data=iris, formula=Petal.Length~Species)
example$linreg_func()
example$linreg_func()
example$linreg_func()
library(Lab4Pack)
library(Lab4Pack)
example$linreg_func()
library(Lab4Pack)
?LiU_theme
data(iris)
ggplot(iris, aes(y=Sepal.Length, x=Petal.Length)) +
geom_point(size=1) +
labs(title="Scatterplot of Sepal Length and Petal Length",
y="Sepal Length",
x="Penatal Length") +
LiU_theme()
require(ggplot2)
data(iris)
ggplot(iris, aes(y=Sepal.Length, x=Petal.Length)) +
geom_point(size=1) +
labs(title="Scatterplot of Sepal Length and Petal Length",
y="Sepal Length",
x="Penatal Length") +
LiU_theme()
warnings()
library(Lab4Pack)
Update-Package Lab4Pack
rmarkdown::render('C:/Users/Leonn/Documents/Lab4/vignettes/Linreg-vignette.Rmd')
library(Lab4Pack)
rmarkdown::render('C:/Users/Leonn/Documents/Lab4/vignettes/Linreg-vignette.Rmd')
library(Lab4Pack)
rmarkdown::render('C:/Users/Leonn/Documents/Lab4/vignettes/Linreg-vignette.Rmd')
?linreg
example <- linreg(data=iris, formula=Petal.Length~Species)
devtools::load_all(".")
warnings()
example <- linreg(data=iris, formula=Petal.Length~Species)
example$linreg_func()
example$summary()
example$print()
rmarkdown::render('C:/Users/Leonn/Documents/Lab4/vignettes/Linreg-vignette.Rmd')
?LiU_theme
?LiU_theme
library(Lab4Pack)
?LiU_theme
data(iris)
data(iris)
ggplot(iris, aes(y=Sepal.Length, x=Petal.Length)) +
geom_point(size=1) +
labs(title="Scatterplot of Sepal Length and Petal Length",
y="Sepal Length",
x="Penatal Length") +
LiU_theme()
library(extrafont)
warnings()
library(extrafont)
data(iris)
ggplot(iris, aes(y=Sepal.Length, x=Petal.Length)) +
geom_point(size=1) +
labs(title="Scatterplot of Sepal Length and Petal Length",
y="Sepal Length",
x="Penatal Length") +
LiU_theme()
devtools::load_all(".")
library(Lab4Pack)
ggplot(iris, aes(y=Sepal.Length, x=Petal.Length)) +
geom_point(size=1) +
labs(title="Scatterplot of Sepal Length and Petal Length",
y="Sepal Length",
x="Penatal Length") +
LiU_theme()
devtools::load_all(".")
data(iris)
ggplot(iris, aes(y=Sepal.Length, x=Petal.Length)) +
geom_point(size=1) +
labs(title="Scatterplot of Sepal Length and Petal Length",
y="Sepal Length",
x="Penatal Length") +
LiU_theme()
warnings()
font_import()
n
?font_import()
font_import()
devtools::load_all(".")
warnings()
devtools::load_all(".")
library(Lab4Pack)
?LiU_theme
warnings()
library(Lab4Pack)
devtools::load_all(".")
devtools::load_all(".")
library(Lab4Pack)
?LiU_theme
warnings()
LiU_theme <- function(){
theme(# Title
plot.title = element_text(hjust=0.5,        # Center the title
face="bold",      # Bold text
size=14,          # Change the size
color="#3DD2DC"), # LiU blue colour
# Axis title
axis.title = element_text(face="bold",      # Bold text
size=12,          # Change the size
color="#3DD2DC"), # LiU blue colour
# Axis text
axis.text = element_text(size=10),               # Change the size
panel.border = element_rect(fill = NA,          # No border colour
colour = "grey20"), # Gray colour for the border
panel.grid = element_line(colour = "grey85"),   # Gray color for the grid
panel.background = element_rect(fill = "white", # White background
colour = NA)    # No colour
)
}
data(iris)
ggplot(iris, aes(y=Sepal.Length, x=Petal.Length)) +
geom_point(size=1) +
labs(title="Scatterplot of Sepal Length and Petal Length",
y="Sepal Length",
x="Penatal Length") +
LiU_theme()
require(ggplot2)
data(iris)
ggplot(iris, aes(y=Sepal.Length, x=Petal.Length)) +
geom_point(size=1) +
labs(title="Scatterplot of Sepal Length and Petal Length",
y="Sepal Length",
x="Penatal Length") +
LiU_theme()
gc()
devtools::load_all(".")
library(Lab4Pack)
library(Lab4Pack)
?LiU_theme
data(iris)
ggplot(iris, aes(y=Sepal.Length, x=Petal.Length)) +
geom_point(size=1) +
labs(title="Scatterplot of Sepal Length and Petal Length",
y="Sepal Length",
x="Penatal Length") +
LiU_theme()
library(Lab4Pack)
require(ggplot2)
ggplot(iris, aes(y=Sepal.Length, x=Petal.Length)) +
geom_point(size=1) +
labs(title="Scatterplot of Sepal Length and Petal Length",
y="Sepal Length",
x="Penatal Length") +
LiU_theme()
library(Lab4Pack)
browseVignettes("Lab4Pack")
browseVignettes("Lab4Pack")
rmarkdown::render('C:/Users/Leonn/OneDrive/Skrivbord/test lab4/Lab4/vignettes/Linreg-vignette.Rmd')
library(Lab4Pack)
devtools::load_all(".")
rmarkdown::render('C:/Users/Leonn/OneDrive/Skrivbord/test lab4/Lab4/vignettes/Linreg-vignette.Rmd')
browseVignettes("Lab4Pack")
devtools::load_all(".")
library(Lab4Pack)
devtools::load_all(".")
browseVignettes("Lab4Pack")
rmarkdown::render('C:/Users/Leonn/OneDrive/Skrivbord/test lab4/Lab4/vignettes/Linreg-vignette.Rmd')
browseVignettes("Lab4Pack")
browseVignettes(package="Lab4Pack")
browseVignettes(linreg)
browseVignettes("linreg")
browseVignettes("Lab4Pack")
browseVignettes()
help("Lab4Pack")
library(Lab4Pack)
help("Lab4Pack")
devtools::load_all(".")
library(Lab4Pack)
library(Lab4Pack)
library(Lab4Pack)
devtools::load_all(".")
library(Lab4Pack)
library(Lab4Pack)
?linreg
help(package="Lab4Pack", help_type="HTML")
browseVignettes("Lab4Pack")
rmarkdown::render('C:/Users/Leonn/OneDrive/Skrivbord/test lab4/Lab4/vignettes/Linreg-vignette.Rmd')
library(Lab4Pack)
devtools::load_all(".")
rmarkdown::render('C:/Users/Leonn/OneDrive/Skrivbord/test lab4/Lab4/vignettes/Linreg-vignette.Rmd')
rmarkdown::render('C:/Users/Leonn/OneDrive/Skrivbord/test lab4/Lab4/vignettes/Linreg-vignette.Rmd')
rmarkdown::render('C:/Users/Leonn/OneDrive/Skrivbord/test lab4/Lab4/vignettes/Linreg-vignette.Rmd')
rmarkdown::render('C:/Users/Leonn/OneDrive/Skrivbord/test lab4/Lab4/vignettes/Linreg-vignette.Rmd')
library(devtools)
use_vignette("linreg-vignette", title="linreg vignette")
rmarkdown::render('C:/Users/Leonn/OneDrive/Skrivbord/test lab4/Lab4/vignettes/Linreg-vignette.Rmd')
devtools::load_all(".")
library(Lab4Pack)
library(Lab4Pack)
devtools::load_all(".")
?linreg
library(Lab4Pack)
devtools::document()
?linreg
devtools::load_all(".")
install.packages("Lab4Pack")
install.packages("Lab4Pack")
install.packages("Lab4Pack")
install.packages("Lab4Pack")
devtools::build_vignette()
devtools::load_all()
Lab4Pack::linreg(data=iris, formula=Petal.Width~Species)
devtools::document()
Lab4Pack::linreg(data=iris, formula=Petal.Width~Species)
library(Lab4Pack)
Lab4Pack::linreg(data=iris, formula=Petal.Width~Species)
library(Lab4Pack)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
library(Lab4Pack)
usethis::use_package("ggplot2")
usethis::use_package("methods")
devtools::document()
devtools::load_all(".")
library(Lab4Pack)
devtools::document()
usethis::use_package("ggplot")
library(Lab4Pack)
devtools::load_all(".")
